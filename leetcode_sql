SQL:1211
SELECT 
   query_name, ROUND(AVG(rating/position), 2) AS quality,
   ROUND(
     SUM(IF(rating < 3, 1, 0))/COUNT(rating)*100,2) AS poor_query_percentage
FROM Queries
WHERE query_name IS NOT NULL
GROUP BY query_name;

sql:1174
select round(sum(case when min_order_date=min_customer_pref_delivery_date 
then 1 else 0 end)*100/count(*),2) as immediate_percentage
 from (SELECT MIN(order_date) AS min_order_date, MIN(customer_pref_delivery_date) AS min_customer_pref_delivery_date 
    FROM Delivery 
    GROUP BY customer_id) AS min_delivery_table;
sql:550
SELECT
  ROUND(
    COUNT(A1.player_id)
    / (SELECT COUNT(DISTINCT A3.player_id) FROM Activity A3)
  , 2) AS fraction
FROM
  Activity A1
WHERE
  (A1.player_id, DATE_SUB(A1.event_date, INTERVAL 1 DAY)) IN (
    SELECT
      A2.player_id,
      MIN(A2.event_date)
    FROM
      Activity A2
    GROUP BY
      A2.player_id
  );
1729. Find Followers Count
select user_id,count(distinct follower_id) as followers_count from Followers
group by user_id order by user_id asc

619. Biggest Single Number
SELECT MAX(num) AS num 
FROM MyNumbers 
WHERE num IN 
(SELECT num 
FROM MyNumbers 
GROUP BY num 
HAVING COUNT(*) = 1);
596: Classes More Than 5 Students
SELECT class FROM Courses GROUP BY class HAVING count(student) >= 5;

sql:1045 Customers Who Bought All Products
select  customer_id from Customer group by customer_id having 
 count( distinct  product_key)=(select  distinct count( product_key) 
from Product )

1731 .The Number of Employees Which Report to Each Employee
select e.employee_id,e.name,count(*) as reports_count
,round(avg(ee.age))average_age from Employees e 
join Employees ee on e.employee_id=ee.reports_to
group by e.employee_id order by e.employee_id

1789. Primary Department for Each Employee
SELECT employee_id, department_id
FROM Employee
WHERE primary_flag = 'Y' OR employee_id in (
    SELECT employee_id
    FROM Employee
    GROUP BY employee_id
    HAVING COUNT(*) = 1
)
GROUP BY employee_id

1204. Last Person to Fit in the Bus
 select t.person_name from (select *,sum(weight) over(order by  turn) as running_weight 
from queue) as t where running_weight <=1000 order by 
running_weight desc limit 1


180. Consecutive Numbers
with cte as (
    select num,
    lead(num,1) over() num1,
    lead(num,2) over() num2
    from logs

)

select distinct num ConsecutiveNums from cte where (num=num1) and (num=num2)
